get:
  operationId: "subscribeToProofs"
  summary: "Subscribe to state or block body proofs of future blocks"
  description: |
    Ensures that a [MultiProofResponse](../../../types/api.yaml#/MultiProofResponse) will be available	for the 	states or block bodies of
    all *requested* future blocks in the specified [MultiProofRequest](../../../types/api.yaml#/MultiProofRequest) format. A block is
    *requested* if `block.slot >= first+k*period > block.parent.slot` for any non-negative integer `k`. The default 	values of `first` and
    `period` are both 0. A [MultiProofResponse](../../../types/api.yaml#/MultiProofResponse) is immediately returned for the last existing
    canonical *requested* block if the state or block body Merkle tree of that block is available. Otherwise a zero-length byte vector is
    returned which means that the subscription has been successfully activated for future *requested* blocks. The generated proofs are
    guaranteed to be available through `state` or `body` requests for 60 seconds. The subscription is guaranteed to stay active until its
    *inactive timer* reaches 60 seconds. This timer is started whenever a new proof for a *requested* block is generated and it is stopped
    and reset to zero whenever a [state](./state.yaml) or [body](./body.yaml) request is made to any response generated by the subscription.
  tags:
    - Beacon
  parameters:
    - name: bodies_or_states
      in: path
      required: true
      type: string
      enum: ["bodies", "states"]
    - name: format
      in: query
      required: true
      schema:
        $ref: '../../../beacon-node-oapi.yaml#/components/schemas/MultiProofRequest'
    - name: first
      in: query
      required: false
      schema:
        $ref: '../../../beacon-node-oapi.yaml#/components/schemas/Uint64'
    - name: period
      in: query
      required: false
      schema:
        $ref: '../../../beacon-node-oapi.yaml#/components/schemas/Uint64'
      
  responses:
    "200":
      description: "Successful subscription, proof returned"
      content:
        application/octet-stream:
          schema:
            $ref: "../../../beacon-node-oapi.yaml#/components/schemas/MultiProofResponse"
    "200":
      description: "Successful subscription, no proof returned"
      content:
        application/octet-stream:
          schema:
            description: "zero-length byte vector"
    "400":
      description: "Requested tree node not available"
      content:
        application/json:
          schema:
            $ref: "../../../beacon-node-oapi.yaml#/components/schemas/ErrorMessage"
            example:
              code: 400
              message: "Requested tree node not available: #1234"
    "500":
      $ref: '../../../beacon-node-oapi.yaml#/components/responses/InternalError'
    "503":
      description: "Too many subscriptions"
      content:
        application/json:
          schema:
            $ref: "../../../beacon-node-oapi.yaml#/components/schemas/ErrorMessage"
            example:
              code: 503
              message: "Too many subscriptions"
