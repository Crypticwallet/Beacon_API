# API specific types

ValidatorResponse:
  type: object
  properties:
    index:
      allOf:
        - $ref: './primitive.yaml#/Uint64'
        - description: "Index of validator in validator registry."
    balance:
      allOf:
        - $ref: "./primitive.yaml#/Gwei"
        - description: "Current validator balance in gwei."
    status:
      $ref: "#/ValidatorStatus"
    validator:
      $ref: "./validator.yaml#/Validator"

ValidatorBalanceResponse:
  type: object
  properties:
    index:
      allOf:
        - $ref: './primitive.yaml#/Uint64'
        - description: "Index of validator in validator registry."
    balance:
      allOf:
        - $ref: "./primitive.yaml#/Gwei"
        - description: "Current validator balance in gwei."

ValidatorStatus:
  description: |
    Possible statuses:
    - **pending_initialized** - When the first deposit is processed, but not enough funds are available (or not yet the end of the first epoch) to get validator into the activation queue.
    - **pending_queued** - When validator is waiting to get activated, and have enough funds etc. while in the queue, validator activation epoch keeps changing until it gets to the front and make it through (finalization is a requirement here too).
    - **active_ongoing** - When validator must be attesting, and have not initiated any exit.
    - **active_exiting** - When validator is still active, but filed a voluntary request to exit.
    - **active_slashed** - When validator is still active, but have a slashed status and is scheduled to exit.
    - **exited_unslashed** - When validator has reached regular exit epoch, not being slashed, and doesn't have to attest any more, but cannot withdraw yet.
    - **exited_slashed** - When validator has reached regular exit epoch, but was slashed, have to wait for a longer withdrawal period.
    - **withdrawal_possible** - After validator has exited, a while later is permitted to move funds, and is truly out of the system.
    - **withdrawal_done** - (not possible in phase0, except slashing full balance) - actually having moved funds away

    [Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)
  enum: ["pending_initialized", "pending_queued", "active_ongoing", "active_exiting", "active_slashed", "exited_unslashed", "exited_slashed", "withdrawal_possible", "withdrawal_done"]
  example: "active_ongoing"


Committee:
  description: Group of validators assigned to attest at specific slot and that have the same committee index (shard in phase 1)
  type: object
  properties:
    index:
      allOf:
        - $ref: './primitive.yaml#/Uint64'
        - description: Committee index at a slot
    slot:
      $ref: './primitive.yaml#/Uint64'

    validators:
      type: array
      description: "List of validator indices assigned to this committee"
      items:
        $ref: './primitive.yaml#/Uint64'

MultiProofRequest:
  description: |
    The binary Merkle multi-proof request format, interpreted as an MSB-first bit list, recursively encodes the shape of the subtree
    that the requested proof should cover. If the subtree is a single node whose Merkle proof is the tree node itself, it is encoded
    as a single `1` bit. Otherwise the subtree encoding consists of a `0` bit, then the recursive encoding of the left child subtree,
    then the right child subtree. This encoding always ends with a `1` bit and in total consists of `N` `1` bits and `N-1` `0` bits,
    where `N` is the number of tree nodes stored in the resulting [MultiProofResponse](./api.yaml#/MultiProofResponse) in the same
    order as the `1` bits representing the stored nodes in the format. After the last `1` bit the remaining least significant bits
    of the last byte are filled with zeroes. The hex encoding should always have an even number of nibbles and leading zeroes should
    not be discarded. For example, a proof that proves the generalized tree index 42 should be encoded as 0x25e0.
  type: string
  format: hex
  example: "0x25e0"
  pattern: "^0x[a-fA-F0-9]+$"

MultiProofResponse:
  description: |
    An `N*32` bytes long raw byte vector consisting of `N` Merkle tree nodes, each corresponding to a `1` bit in the
    [MultiProofRequest](./api.yaml#/MultiProofRequest) format description, stored in the same order.
